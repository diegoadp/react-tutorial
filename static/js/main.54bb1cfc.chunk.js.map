{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","preventDefault","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GAEvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BAAI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAHCA,MAOjB,OAAO,gCAAQJ,KAeJS,EAXD,SAACV,GACX,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OChChEE,E,4MACFC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAITM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACZ,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,SAACJ,GACVA,EAAMK,iBAEN,EAAKpB,MAAMqB,aAAa,EAAKR,OAC7B,EAAKK,SAAS,EAAKN,e,4CAKvB,WACI,MAAsBU,KAAKT,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACI,iCACI,uBAAOgB,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHR,MAAOX,EACPoB,SAAUJ,KAAKR,eACnB,uBAAOS,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHR,MAAOV,EACPmB,SAAUJ,KAAKR,eACnB,wBAAQG,MAAM,SAAST,QAASc,KAAKH,WAArC,2B,GA7CGQ,aAmDJhB,IClDTiB,E,4MACFf,MAAQ,CACJgB,WAAY,I,EAGhBpB,gBAAkB,SAACJ,GACf,IAAQwB,EAAe,EAAKhB,MAApBgB,WAER,EAAKX,SAAS,CACVW,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM3B,Q,EAKzBgB,aAAe,SAACU,GACZ,EAAKb,SAAS,CAAEW,WAAW,GAAD,mBAAM,EAAKhB,MAAMgB,YAAjB,CAA6BE,O,4CAG3D,WACI,IAAQF,EAAeP,KAAKT,MAApBgB,WAER,OACI,sBAAKI,UAAU,YAAf,UACI,gDACA,oFACA,cAAC,EAAD,CAAO/B,cAAe2B,EAAYpB,gBAAiBa,KAAKb,kBACxD,yCACA,cAAC,EAAD,CAAMY,aAAcC,KAAKD,sB,GA5BvBM,aAkCHC,I,MCjCfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.54bb1cfc.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () => {\n    return (\n        <tread>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </tread>\n    );\n}\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\n            </tr>\n        );\n    });\n    return <tbody>{rows}</tbody>;\n}\n\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props; // Study - Destructuring assignment\n\n    return (\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    );\n}\n\nexport default Table","import React, { Component } from 'react';\n\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n\n    }\n    \n    state = this.initialState;\n    \n    handleChange = (event) => {\n        const { name, value } = event.target; // Study - Destructuring assignment\n\n        this.setState({\n            [name]: value, //Study - Computed property names\n        });\n    }\n\n    submitForm = (event) => {\n        event.preventDefault();\n\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n\n\n    render() {\n        const { name, job } = this.state; // Study - Destructuring assignment\n\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <button value=\"Submit\" onClick={this.submitForm}>Submit</button>\n            </form>\n        );\n    }\n}\n\nexport default Form","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: [],\n    }\n\n    removeCharacter = (index) => {\n        const { characters } = this.state; // Study - Destructuring assignment\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            }),\n        });\n    }\n\n    handleSubmit = (character) => {\n        this.setState({ characters: [...this.state.characters, character] }); // Study - Spread syntax (...)\n    }\n\n    render() {\n        const { characters } = this.state; // Study - Destructuring assignment\n\n        return (\n            <div className=\"container\">\n                <h1>React Tutorial</h1>\n                <p>Add a character with a name and a job to the table.</p>\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <h3>Add New</h3>\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}